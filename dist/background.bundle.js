(()=>{"use strict";async function e(){return new Promise((e=>{chrome.tabs.query({active:!0,currentWindow:!0},(t=>{e(t)}))}))}async function t(e,t,...o){await chrome.scripting.executeScript({target:{tabId:e},func:t,args:o}),console.log("Script done")}async function o(e){console.log("Entered textareavalue script");const t=document.getElementById("prompt-textarea");if(console.log(t),t){t.value=e,t.dispatchEvent(new Event("input",{bubbles:!0}));const o=new KeyboardEvent("keydown",{key:"Enter",code:"Enter",which:13,keyCode:13,bubbles:!0,cancelable:!0});t.dispatchEvent(o)}else console.log("TextArea not found!")}async function n(e){console.log("Entered Last message script");const t=document.querySelector('[data-testid^="conversation-turn-"]:last-child');if(t){const e=t.querySelector(".text-message div.markdown.prose").textContent.trim();console.log(e)}else console.error("Last message element not found.")}let a,c;chrome.runtime.onMessage.addListener((async(s,i,r)=>{if("openJobTab"===s.type)chrome.storage.local.get("url",(async({url:t})=>{console.log("Opening tab",t),await async function(t){const o=await e();try{const e=await chrome.tabs.create({url:t});await chrome.tabs.update(e.id,{active:!0}),o&&await chrome.tabs.remove(o[0].id),chrome.runtime.sendMessage({type:"tabLoaded"})}catch(e){console.error("Error at openJobTab:",e)}}(t)}));else if("closeTab"===s.type){const[t]=await e();t&&chrome.tabs.remove(t.id)}else if("openChatGPT"===s.type){console.log("Running background openChatGPT function");const e="https://chat.openai.com/",a=await chrome.tabs.create({url:e});await new Promise((e=>setTimeout(e,7e3))),await t(a.id,o,s.query),await new Promise((e=>setTimeout(e,5e3))),await t(a.id,n,s.query)}else if("openIndeedJob"===s.type)console.log("message.type == openIndeedJob"),chrome.tabs.query({active:!0,currentWindow:!0},(e=>{if(e.length>0){const t=e[0].id;console.log("ID of active tab:",t),console.log("ID of sender:",i.tab.id),c=t,chrome.scripting.executeScript({target:{tabId:t},files:["./applyScript.bundle.js"]})}else console.error("No active tab found")})),a=i.tab.id;else if("injectScript"==s.type)console.log("Received injectScript message"),console.log("Sender vs stored appliedTab",i.tab.id,c);else if("applied"==s.type)return console.log("Continue part done and applied job"),chrome.tabs.sendMessage(a,{type:"injectedScriptFinished"}),r({success:!0}),!0})),chrome.tabs.onUpdated.addListener(((e,t,o)=>{"complete"===t.status&&e===c&&(console.log("Page navigation detected in applied tab, injecting injectScript.bundle.js"),chrome.scripting.executeScript({target:{tabId:c},files:["./injectScript.bundle.js"]}))}))})();